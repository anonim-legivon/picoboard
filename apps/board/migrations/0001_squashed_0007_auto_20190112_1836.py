# Generated by Django 2.1.5 on 2019-01-12 09:37

import django.utils.timezone
import django_regex.fields
import netfields.fields
from django.db import migrations, models

import apps.board.helpers


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ban',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('inet',
                 netfields.fields.CidrAddressField(db_index=True, max_length=43,
                                                   verbose_name='CIDR')),
                ('for_all_boards', models.BooleanField(default=False,
                                                       verbose_name='для всех досок')),
                ('reason', models.TextField(blank=True, default='',
                                            verbose_name='причина')),
                ('duration', models.DurationField(verbose_name='длительность')),
                ('created', models.DateTimeField(auto_now_add=True,
                                                 verbose_name='создан')),
            ],
            options={
                'verbose_name': 'бан',
                'verbose_name_plural': 'баны',
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('board', models.CharField(max_length=32, unique=True,
                                           verbose_name='название')),
                ('board_name', models.CharField(blank=True, max_length=48,
                                                verbose_name='название доски')),
                ('description', models.TextField(blank=True, default='',
                                                 verbose_name='описание')),
                ('bump_limit', models.PositiveSmallIntegerField(default=500,
                                                                verbose_name='бамп лимит')),
                ('thread_limit', models.PositiveSmallIntegerField(default=200,
                                                                  verbose_name='максимум тредов')),
                ('filesize_limit', models.PositiveIntegerField(default=20971520,
                                                               verbose_name='лимит на размер файлов')),
                ('enable_trips', models.BooleanField(default=False,
                                                     verbose_name='разрешены трип коды')),
                ('trip_required', models.BooleanField(default=False,
                                                      verbose_name='генерировать трип код')),
                ('enable_sage', models.BooleanField(default=True,
                                                    verbose_name='sage включена')),
                ('enable_subject', models.BooleanField(default=True,
                                                       verbose_name='разрешены темы постов')),
                ('enable_names', models.BooleanField(default=False,
                                                     verbose_name='разрешены имена')),
                ('default_name',
                 models.CharField(default='Аноним', max_length=48,
                                  verbose_name='имя в постах')),
            ],
            options={
                'verbose_name': 'доска',
                'verbose_name_plural': 'доски',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True,
                                          verbose_name='категория')),
                ('order', models.SmallIntegerField(verbose_name='порядок')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('num', models.PositiveIntegerField(blank=True, db_index=True,
                                                    verbose_name='id поста')),
                ('parent',
                 models.PositiveIntegerField(blank=True, db_index=True,
                                             verbose_name='родитель')),
                ('is_op_post', models.BooleanField(default=False,
                                                   verbose_name='первый пост в треде')),
                ('timestamp',
                 models.DateTimeField(auto_now_add=True, verbose_name='время')),
                ('ip', models.GenericIPAddressField(blank=True, null=True,
                                                    verbose_name='IP')),
                ('name',
                 models.CharField(blank=True, default='Аноним', max_length=48,
                                  verbose_name='имя')),
                ('tripcode',
                 models.CharField(blank=True, default='', max_length=48,
                                  verbose_name='трипкод')),
                ('email', models.EmailField(blank=True, max_length=254,
                                            verbose_name='email')),
                ('subject',
                 models.CharField(blank=True, default='', max_length=128,
                                  verbose_name='тема')),
                ('password',
                 models.CharField(blank=True, default='', max_length=64,
                                  verbose_name='пароль')),
                ('comment', models.TextField(blank=True, default='',
                                             verbose_name='сообщение')),
                ('sage', models.BooleanField(blank=True, default=False,
                                             verbose_name='sage')),
            ],
            options={
                'verbose_name': 'пост',
                'verbose_name_plural': 'посты',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='SpamWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('expression', django_regex.fields.RegexField(
                    verbose_name='регулярное выражение')),
                ('for_all_boards', models.BooleanField(default=False,
                                                       verbose_name='для всех досок')),
                ('created', models.DateTimeField(auto_now_add=True,
                                                 verbose_name='создано')),
                ('boards',
                 models.ManyToManyField(blank=True, related_name='spam_words',
                                        to='board.Board',
                                        verbose_name='доски')),
            ],
            options={
                'verbose_name': 'спам слово',
                'verbose_name_plural': 'спам слова',
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('is_pinned',
                 models.BooleanField(default=False, verbose_name='закреплен')),
                ('is_closed',
                 models.BooleanField(default=False, verbose_name='закрыт')),
                ('lasthit', models.DateTimeField(auto_now=True,
                                                 verbose_name='последний пост')),
                ('board',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   related_name='threads', to='board.Board',
                                   verbose_name='доска')),
            ],
            options={
                'verbose_name': 'тред',
                'verbose_name_plural': 'треды',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='thread',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                    related_name='posts', to='board.Thread',
                                    verbose_name='тред'),
        ),
        migrations.AddField(
            model_name='board',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                    related_name='boards', to='board.Category',
                                    verbose_name='категория'),
        ),
        migrations.AddField(
            model_name='ban',
            name='board',
            field=models.ForeignKey(blank=True, null=True,
                                    on_delete=django.db.models.deletion.CASCADE,
                                    related_name='bans', to='board.Board',
                                    verbose_name='доска'),
        ),
        migrations.AlterField(
            model_name='board',
            name='board_name',
            field=models.CharField(max_length=48,
                                   verbose_name='название доски'),
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('file', models.FileField(
                    upload_to=apps.board.helpers.resolve_save_path,
                    verbose_name='файл')),
                ('height', models.IntegerField(blank=True, default=0,
                                               verbose_name='высота')),
                ('width', models.IntegerField(blank=True, default=0,
                                              verbose_name='ширина')),
                ('type', models.PositiveSmallIntegerField(
                    choices=[(0, 'картинка'), (1, 'видео')],
                    verbose_name='тип')),
                ('md5', models.TextField(blank=True, default='',
                                         verbose_name='MD5 хэш')),
                ('post',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   related_name='files', to='board.Post',
                                   verbose_name='пост')),
                ('fullname',
                 models.CharField(db_index=True, default='test', max_length=255,
                                  verbose_name='оригинальное название')),
            ],
            options={
                'verbose_name': 'файл',
                'verbose_name_plural': 'файлы',
            },
        ),
        migrations.RemoveField(
            model_name='ban',
            name='created',
        ),
        migrations.AddField(
            model_name='ban',
            name='banned_at',
            field=models.DateTimeField(default=django.utils.timezone.now,
                                       verbose_name='забанен'),
        ),
        migrations.AddField(
            model_name='ban',
            name='until',
            field=models.DateTimeField(blank=True,
                                       default=django.utils.timezone.now,
                                       verbose_name='бан до'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='board',
            name='is_hidden',
            field=models.BooleanField(default=False,
                                      verbose_name='доска скрыта'),
        ),
    ]
